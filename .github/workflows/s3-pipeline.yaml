name: Deploy to S3

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Fetch the last two commits

    - name: Configure AWS credentials from OpenID Connect
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::471112860139:role/release-notes-role-gh-actions
        aws-region: us-west-2

    - name: Check or create pipeline counter
      id: check_counter
      run: |
        # Check if the counter file exists, if not, create it and set to 0
        if [ ! -f .pipeline_counter ]; then
          echo "0" > .pipeline_counter
        fi
        # Read the current value of the counter
        COUNTER=$(cat .pipeline_counter)
        echo "Pipeline counter is: $COUNTER"
        echo "::set-output name=counter::$COUNTER"

    - name: First run - copy all contents of addons to S3 (preserving folder structure)
      if: steps.check_counter.outputs.counter == '0'
      run: |
        echo "First run detected, copying all files in addons directory to S3 (preserving folder structure)..."
        aws s3 cp ./addons/ s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/ --recursive --exclude ".pipeline_counter" --include "addons/*"

    - name: Get list of changed files in addons directory
      if: steps.check_counter.outputs.counter != '0'
      id: changes
      run: |
        # Only track changes in the addons directory
        git diff --name-status HEAD^ HEAD -- addons/ > changes.log
        cat changes.log

    - name: Handle file changes (add, modify, rename, delete) in addons directory only (preserving folder structure)
      if: steps.check_counter.outputs.counter != '0'
      run: |
        # Loop through the diff log to identify changes in the addons directory
        while read status file; do
          # Ensure the file is within the addons directory
          if [[ "$file" == addons/* ]]; then
            case "$status" in
              A)  # File added
                  echo "Adding file: $file"
                  aws s3 cp "$file" s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/${file#addons/}
                  ;;
              M)  # File modified
                  echo "Modifying file: $file"
                  aws s3 cp "$file" s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/${file#addons/} --metadata-directive REPLACE
                  ;;
              R*) # File renamed
                  old_file=$(echo "$file" | cut -f1)
                  new_file=$(echo "$file" | cut -f2)
                  echo "Renaming file from $old_file to $new_file"
                  aws s3 rm s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/${old_file#addons/}
                  aws s3 cp "$new_file" s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/${new_file#addons/}
                  ;;
              D)  # File deleted
                  echo "Deleting file: $file"
                  aws s3 rm s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/${file#addons/}
                  ;;
              *)  # Skip unrecognized statuses
                  echo "Unknown status $status for file $file"
                  ;;
            esac
          fi
        done < changes.log

    - name: Increment pipeline counter
      run: |
        COUNTER=$(cat .pipeline_counter)
        NEW_COUNTER=$((COUNTER + 1))
        echo "$NEW_COUNTER" > .pipeline_counter
        echo "Pipeline counter incremented to: $NEW_COUNTER"

    - name: Commit the updated counter
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .pipeline_counter
        git commit -m "Increment pipeline counter"
        git push
