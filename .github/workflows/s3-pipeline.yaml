name: Deploy to S3

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Fetch the last two commits

    - name: Configure AWS credentials from OpenID Connect
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::471112860139:role/release-notes-role-gh-actions
        aws-region: us-west-2

    - name: Get list of changed and deleted files
      id: changes
      run: |
        git diff --name-status HEAD^ HEAD > file_changes.txt
        cat file_changes.txt

    - name: Upload or remove files from S3 based on PR changes
      run: |
        cat file_changes.txt | while read status file; do
          if [[ "$status" == "A" ]]; then
            echo "Added: $file"
            aws s3 cp "$file" "s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/$file"
          elif [[ "$status" == "M" ]]; then
            echo "Modified: $file"
            aws s3 cp "$file" "s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/$file"
          elif [[ "$status" == "D" ]]; then
            echo "Deleted: $file"
            aws s3 rm "s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/$file"
          fi
        done

    - name: Check if the S3 bucket is empty
      id: bucket_check
      run: |
        if aws s3 ls s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/ | grep -q .; then
          echo "Bucket is not empty"
          echo "bucket-empty=false" >> $GITHUB_ENV
        else
          echo "Bucket is empty, uploading all files"
          echo "bucket-empty=true" >> $GITHUB_ENV

    - name: Upload all repository files if the bucket is empty (initial run)
    if: ${{ env.bucket-empty == 'true' }}   # Corrected the conditional check
      run: |
        find . -type f ! -name "*.git*" | while read file; do
          s3_path="${file#./}"  # Remove the leading './' from the file path
          echo "Uploading file: $file to S3 path: $s3_path"
          aws s3 cp "$file" "s3://persistentstack-us-west-2-releasenotesbucketdbdb4f-pys20oqkdpki/$s3_path"
        done
